package backend;

import java.util.*;

public class ULT {

	private Queue<Burst> trace;	
	
	public ULT() {
		
	}
	
	public boolean isFinished() {
		return trace.isEmpty();
	}

	public boolean wantsCPU() {
		return trace.peek().isCPU();
	}

	public void runCPU(int core) {
		Burst current = trace.peek();
		if (!current.isCPU()) {
			throw new RuntimeException("Running CPU in ULT that doesn't want CPU");
		}
		current.time--;
		if (current.time == 0) {
			trace.poll();
		}
	}

	public boolean wantsIO() {
		return trace.peek().isIO();
	}

	public int getIORequest() {
		Burst current = trace.peek();
		if (!current.isIO()) {
			throw new RuntimeException("getting I/O request from ULT that doesn't want I/O");
		}
		return current.getRequestNumber();
	}

	public void runIO(int io) {
		// TODO Auto-generated method stub
		
	}

	public void oneQuantumGoesBy() {
		// TODO Auto-generated method stub
		
	}

}
